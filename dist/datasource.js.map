{"version":3,"sources":["../src/datasource.js"],"names":["_","$","moment","dateMath","SolrDatasource","instanceSettings","$q","backendSrv","templateSrv","url","endsWith","substr","length","basicAuth","withCredentials","name","solrAnomalyCollection","jsonData","solrRawCollection","solrCloudMode","_request","options","method","inspect","headers","datasourceRequest","doRequest","then","response","status","message","title","queryOptions","self","targetPromises","targets","filter","target","hide","map","collection","time","groupEnabled","groupByField","q","replace","scopedVars","queryBuilder","rawParams","split","start","sort","sortOrder","rows","query","fq","range","from","toJSON","to","fl","fields","startTime","endTime","tuple","p","val","group","groupLimit","requestOptions","params","bind","convertResponse","outputFormat","value","all","convertedResponses","result","data","convertedResponse","flatten","mapToTextValue","text","includes","queryParams","searchQuery","variables","find","v","timeRange","pageSize","arr","Array","Math","round","numFound","Number","keys","ele","firstNResults","slice","lastNResults","splice","concat","facetFields","collections","facet_counts","ar","key","facet_fields","hasOwnProperty","array","i","push","expandable","field","format","seriesList","series","facets","lineChartFacet","jobs","buckets","forEach","jobId","job","partFields","partFieldJson","JSON","parse","partField","jobIdWithPartField","aggr_field","timestamp","actualSeries","scoreSeries","anomalySeries","ts","utc","timeBucket","valueOf","actual","score","anomaly","datapoints","heatMapFacet","dayBuckets","Day0","seriesData","bucket","a","b","totalA","totalB","d","columns","index","docs","item","row","property","type","reverse","groupBy","responseHeader","grouped","groups","doclist","t","unix","groupValue","undefined","prop","convertResponseUngrouped","convertResponseGrouped","annotation","baseQuery","timeField","tagsField","titleField","textField","toISOString","end","limit","doc","tags"],"mappings":"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","file":"datasource.js","sourcesContent":["// Copyright 2018 PUE.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport _ from 'lodash';\nimport * as $ from 'jquery';\nimport moment from 'moment';\nimport * as dateMath from 'app/core/utils/datemath';\n\n/** @ngInject */\nexport class SolrDatasource {\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.url = instanceSettings.url;\n    if (this.url.endsWith('/')) {\n      this.url = this.url.substr(0, this.url.length - 1);\n    }\n    this.basicAuth = instanceSettings.basicAuth;\n    this.withCredentials = instanceSettings.withCredentials;\n    this.name = instanceSettings.name;\n    //this.collection = instanceSettings.jsonData.collection;\n    this.$q = $q;\n    this.templateSrv = templateSrv;\n    this.backendSrv = backendSrv;\n    this.solrAnomalyCollection = instanceSettings.jsonData.solrAnomalyCollection;\n    this.solrRawCollection = instanceSettings.jsonData.solrRawCollection;\n    this.solrCloudMode = instanceSettings.jsonData.solrCloudMode;\n\n    // Helper to make API requests to Solr. To avoid CORS issues, the requests may be proxied\n    // through Grafana's backend via `backendSrv.datasourceRequest`.\n    this._request = function (options) {\n      options.url = this.url + options.url;\n      options.method = options.method || 'GET';\n      options.inspect = {\n        'type': 'solr'\n      };\n\n      if (this.basicAuth) {\n        options.withCredentials = true;\n        options.headers = {\n          \"Authorization\": this.basicAuth\n        };\n      }\n\n      return backendSrv.datasourceRequest(options);\n    };\n  }\n\n  // Test the connection to Solr by querying collection response.\n  testDatasource() {\n    return this.doRequest({\n      url: this.url + '/',\n      method: 'GET',\n    }).then(response => {\n      if (response.status === 200) {\n        return {\n          status: \"success\",\n          message: \"Data source is working\",\n          title: \"Success\"\n        };\n      } else {\n        return {\n          status: \"error\",\n          message: \"Data source is NOT working\",\n          title: \"Error\"\n        };\n      }\n    });\n  }\n\n  // Query for metric targets within the specified time range.\n  // Returns the promise of a result dictionary.\n  query(queryOptions) {\n    //console.log('QUERY: ' + JSON.stringify(queryOptions));\n    var self = this;\n\n    var targetPromises = _(queryOptions.targets)\n      .filter(function (target) {\n        return target.target && !target.hide;\n      })\n      .map(function (target) {\n        if (!target.collection || !target.time) {\n          return [];\n        }\n        if (target.groupEnabled === 'group' && !target.groupByField) {\n          return [];\n        }\n        //var url = '/api/v' + self.apiVersion + '/timeseries';\n        //fq=time:[2018-01-24T02:59:10.000Z TO 2018-01-24T14:59:10.000Z]\n        var url = '/solr/' + target.collection + '/select?wt=json';\n        //var rows = queryOptions.maxDataPoints || '100000';\n        \n        var q = self.templateSrv.replace(target.target, queryOptions.scopedVars);\n        q = self.queryBuilder(q);\n        var rawParams = target.rawParams ? target.rawParams.split('&') : [];\n        var start = self.templateSrv.replace(target.start, queryOptions.scopedVars);\n        var sort = self.templateSrv.replace(target.sort, queryOptions.scopedVars) || target.time;\n        var sortOrder = self.templateSrv.replace(target.sortOrder, queryOptions.scopedVars) || 'desc';\n        var rows = self.templateSrv.replace(target.rows, queryOptions.scopedVars) || 100;\n        var query = {\n          fq: target.time + ':[' + queryOptions.range.from.toJSON() + ' TO ' + queryOptions.range.to.toJSON() + ']',\n          q: q,\n          fl: target.time + ',' + target.fields,\n          rows: rows,\n          sort: sort + ' ' + sortOrder,\n          start: start\n        };\n\n        if (target.solrCloudMode) {\n          query.startTime = queryOptions.range.from.toJSON();\n          query.endTime = queryOptions.range.to.toJSON();\n        }\n\n        rawParams.map(p => {\n          var tuple = p.split('=');\n          var val = tuple[1].replace('__START_TIME__', queryOptions.range.from.toJSON()).replace('__END_TIME__', queryOptions.range.to.toJSON());\n          query[tuple[0]] = val;\n        });\n        if (target.groupEnabled === 'group') {\n          query.group = true;\n          query['group.field'] = target.groupByField;\n          self.groupByField = target.groupByField;\n          query['group.limit'] = target.groupLimit;\n        }\n\n        self.time = target.time;\n\n        var requestOptions;\n\n        requestOptions = {\n          method: 'GET',\n          url: url,\n          params: query\n        };\n\n        \n        return self._request(requestOptions).then(_.bind(self.convertResponse, self, _, target.outputFormat));\n      })\n      .value();\n\n    return this.$q.all(targetPromises).then(function (convertedResponses) {\n      var result = {\n        data: _.map(convertedResponses, function (convertedResponse) {\n          return convertedResponse.data;\n        })\n      };\n      result.data = _.flatten(result.data);\n      //console.log('RESULT: ' + JSON.stringify(result));\n      return result;\n    });\n  }\n\n  queryBuilder(query) {\n    return query.replace(/{/g, '(').replace(/}/g, ')').replace(/,/g, ' OR ');\n  }\n\n  getOptions(query) {\n    return [];\n  }\n\n  listCollections(query) {\n    // solr/admin/collections?action=LIST&wt=json\n    if (!this.solrCloudMode) {\n      return [];\n    }\n    var url = this.url + '/solr/admin/collections?action=LIST&wt=json';\n    var requestOptions;\n\n    requestOptions = {\n      method: 'GET',\n      url: url\n    };\n\n    return this.doRequest(requestOptions).then(this.mapToTextValue);\n  }\n\n  listFields(query, collection) {\n    // solr/admin/collections?action=LIST&wt=json\n    if (!collection) {\n      return [];\n    }\n    var url = this.url + '/solr/' + collection + '/select?q=*:*&wt=csv&rows=1';\n    var requestOptions;\n\n    requestOptions = {\n      method: 'GET',\n      url: url\n    };\n\n    return this.doRequest(requestOptions).then(this.mapToTextValue);\n  }\n\n  listRawParams() {\n    return [\n      {\n        text: 'HeatMap Facet Query',\n        value: 'facet=true&json.facet={\"heatMapFacet\":{\"numBuckets\":true,\"offset\":0,\"limit\":10000,\"type\":\"terms\",\"field\":\"jobId\",\"facet\":{\"Day0\":{\"type\":\"range\",\"field\":\"timestamp\",\"start\":\"__START_TIME__\",\"end\":\"__END_TIME__\",\"gap\":\"+1HOUR\",\"facet\":{\"score\":{\"type\":\"query\",\"q\":\"*:*\",\"facet\":{\"score\":\"max(score_value)\"}}}}}}}'\n      },{\n        text: 'LineChart FacetQuery',\n        value: 'facet=true&json.facet={\"lineChartFacet\":{\"numBuckets\":true,\"offset\":0,\"limit\":10,\"type\":\"terms\",\"field\":\"jobId\",\"facet\":{\"group\":{\"numBuckets\":true,\"offset\":0,\"limit\":10,\"type\":\"terms\",\"field\":\"partition_fields\",\"sort\":\"s desc\",\"ss\":\"sum(s)\",\"facet\":{\"s\":\"sum(score_value)\",\"timestamp\":{\"type\":\"terms\",\"limit\":-1,\"field\":\"timestamp\",\"sort\":\"index\",\"facet\":{\"actual\":{\"type\":\"terms\",\"field\":\"actual_value\"},\"score\":{\"type\":\"terms\",\"field\":\"score_value\"},\"anomaly\":{\"type\":\"terms\",\"field\":\"is_anomaly\"}}}}}}}}'\n      }, {\n        text: 'Get Raw Messages',\n        value: 'getRawMessages=true'\n      }\n    ];\n  }\n\n  listOutputFormats() {\n    return [\n      {\n        text: 'Table',\n        value: 'table'\n      }, {\n        text: 'Chart',\n        value: 'chart'\n      }, {\n        text: 'Single',\n        value: 'single'\n      }\n    ];\n  }\n\n  metricFindQuery(query) {\n    //q=*:*&facet=true&facet.field=CR&facet.field=product_type&facet.field=provincia&wt=json&rows=0\n    if (!this.solrAnomalyCollection || !this.solrRawCollection) {\n      return [];\n    }\n\n    if (query.includes(',')) {\n      var queryParams = query.split(',');\n      query = queryParams[0];\n    }\n\n    if (query == 'getNumResults') {\n      var searchQuery = _(this.templateSrv.variables).find(v => v.name == 'Search');\n      var url = this.url + '/solr/' + this.solrRawCollection + '/select?q=' + searchQuery.query + '&rows=0' +\n        '&fq=timestamp:[' + this.templateSrv.timeRange.from.toJSON() + ' TO ' + this.templateSrv.timeRange.to.toJSON() + ']';\n\n      return this.doRequest({\n        url: url,\n        method: 'GET',\n      }).then(data => {\n        var pageSize = _(this.templateSrv.variables).find(v => v.name == 'PageSize');\n        var arr = [...Array(Math.round(data.data.response.numFound/Number(pageSize.query))).keys()];\n        arr = arr.map(ele => {\n          return {\n            text: ele + 1,\n            value: ele\n          };\n        });\n        var firstNResults = arr.slice(0, 10);\n        var lastNResults = arr.splice(arr.length -11, arr.length - 1);\n\n        if (firstNResults.length == 0 && lastNResults.length == 0) {\n          return [{\n            text: 0,\n            value: 0\n          }];\n        }\n\n        return firstNResults.concat(lastNResults);\n      });\n    } else {\n      var facetFields = query;\n      var url = this.url + '/solr/' + this.solrAnomalyCollection + '/select?q=*:*&facet=true&facet.field=' + facetFields + '&wt=json&rows=0';\n\n      return this.doRequest({\n        url: url,\n        method: 'GET',\n      }).then(this.mapToTextValue);\n    }\n  }\n\n  mapToTextValue(result) {\n    if (result.data.collections) {\n      return result.data.collections.map(function (collection) {\n        return {\n          text: collection,\n          value: collection\n        };\n      });\n    }\n    if (result.data.facet_counts) {\n      var ar = [];\n      for (var key in result.data.facet_counts.facet_fields) {\n        if (result.data.facet_counts.facet_fields.hasOwnProperty(key)) {\n          var array = result.data.facet_counts.facet_fields[key];\n          for (var i = 0; i < array.length; i += 2) { // take every second element\n            ar.push({\n              text: array[i],\n              expandable: false\n            });\n          }\n        }\n      }\n      return ar;\n    }\n    if (result.data) {\n      return result.data.split('\\n')[0].split(',').map(function (field) {\n        return {\n          text: field,\n          value: field\n        };\n      });\n    }\n  }\n\n  convertResponseUngrouped(response, format) {\n    var data = response.data;\n    var seriesList;\n    var series = {};\n    var self = this;\n\n    // Process line chart facet response\n    if (data.facets && data.facets.lineChartFacet) {\n      seriesList = [];\n      var jobs = data.facets.lineChartFacet.buckets;\n      _(jobs).forEach(job => {\n        var jobId = job.val;\n        var partFields = job.group.buckets;\n        _(partFields).forEach(partField => {\n          var partFieldJson = JSON.parse(partField.val);\n          var jobIdWithPartField = jobId + '_' + partFieldJson.aggr_field;\n          var buckets = partField.timestamp.buckets;\n          var actualSeries = [];\n          var scoreSeries = [];\n          var anomalySeries = [];\n          _(buckets).forEach(timeBucket => {\n            var ts = moment.utc(timeBucket.val).valueOf();\n            var actual = timeBucket.actual.buckets[0].val;\n            var score = timeBucket.score.buckets[0].val;\n            var anomaly = timeBucket.anomaly.buckets[0].val;\n            if (score >= 1 && anomaly) {\n              anomaly = actual;\n            } else {\n              anomaly = null;\n              score = null;\n            }\n            actualSeries.push([actual, ts]);\n            scoreSeries.push([score, ts]);\n            anomalySeries.push([anomaly, ts]);\n          });\n\n          seriesList.push({\n            target: jobIdWithPartField + '_actual',\n            datapoints: actualSeries\n          });\n          seriesList.push({\n            target: jobIdWithPartField + '_score',\n            datapoints: scoreSeries\n          });\n          seriesList.push({\n            target: jobIdWithPartField + '_anomaly',\n            datapoints: anomalySeries\n          });\n        });\n      });\n    }\n    // Process heatmap facet response\n    else if (data.facets && data.facets.heatMapFacet) {\n      seriesList = [];\n      var jobs = data.facets.heatMapFacet.buckets;\n      _(jobs).forEach(job => {\n        var dayBuckets = job.Day0.buckets;\n        var seriesData = [];\n        _(dayBuckets).forEach(bucket => {\n          if (bucket.score != null && bucket.score.score != null) {\n            seriesData.push([bucket.score.score, moment.utc(bucket.val).valueOf()]);\n          }\n        });\n        seriesList.push({\n          target: job.val,\n          datapoints: seriesData\n        });\n      });\n\n      seriesList.sort((a, b) => {\n        var totalA = 0;\n        var totalB = 0;\n        a.datapoints.map(d => {totalA += d[0];});\n        b.datapoints.map(d => {totalB += d[0];});\n\n        return totalA - totalB;\n      });\n    } else if (format === 'table') { // Table\n      var columns = [];\n      var rows = [];\n      seriesList = {};\n      var index = 0;\n      _(data.response.docs).forEach(function (item) {\n        var row = [];\n        for (var property in item) {\n          // Set columns\n          if (index == 0 && item.hasOwnProperty(property)) {\n            if (property == self.time) {\n              columns.push({type: \"time\", text: 'Time'});\n            } else {\n              columns.push({type: \"string\", text: property});\n            }\n          }\n          // Set rows\n          if (property === self.time) {\n            var ts = moment.utc(item[self.time]).valueOf(); //.unix() * 1000;\n            row.push(ts);\n          }\n          else {\n            row.push(item[property]);\n          }\n          \n        }\n        index++;\n        rows.push(row);\n      });\n      seriesList = {\n        type: \"table\",\n        columns: columns,\n        rows: rows\n      };\n    } else if (format === 'single') {\n      seriesList = [];\n      seriesList.push({\n        target:'Number of docs', \n        datapoints: [[data.response.numFound, moment.utc().valueOf() ]]\n      });\n    } else { // Charts\n      seriesList = [];\n     _(data.response.docs).forEach(function (item) {\n       for (var property in item) {\n         if (item.hasOwnProperty(property) && property != self.time) {\n           // do stuff\n           if (typeof (series[property]) === 'undefined') {\n             series[property] = [];\n           }\n           var ts = moment.utc(item[self.time]).valueOf(); //.unix() * 1000;\n           series[property].push([item[property] || 0, ts]);\n         }\n       }\n     });\n     for (var property in series) {\n       seriesList.push({\n         target: property,\n         datapoints: series[property].reverse()\n       });\n     }\n   }\n    \n    return {\n      data: seriesList\n    };\n  }\n\n  /*convertResponseGrouped(response) {\n    var data = response.data;\n    var groupBy = data.responseHeader.params['group.field'];\n    var seriesList = [];\n    // Recover the timestamp variable used for filtering\n    var time = response.data.responseHeader.params.fl.split(',')[0];\n    var seriesData = [];\n    _(data.grouped[groupBy].groups).forEach(function (item) {\n      var target = item.groupValue || 'N/A';\n      var datapoints = [];\n      for (var i = 0; i < item.doclist.docs.length; i++) {\n        for (var property in item.doclist.docs[i]) {\n          if (item.doclist.docs[i].hasOwnProperty(property) && property != time) {\n            var t = moment.utc(item.doclist.docs[i][time]).unix() * 1000;\n            datapoints.push([item.doclist.docs[i][property], t]);\n          }\n        }\n      }\n      seriesList.push({\n        target: target,\n        datapoints: datapoints.reverse()\n      });\n    });\n    return {\n      data: seriesList\n    };\n  }*/\n\n  convertResponseGrouped(response) {\n    var data = response.data;\n    var groupBy = data.responseHeader.params['group.field'];\n    var seriesList = [];\n    // Recover the timestamp variable used for filtering\n    var time = response.data.responseHeader.params.fl.split(',')[0];\n    var datapoints = {};\n    _(data.grouped[groupBy].groups).forEach(function (item) {\n      // var target = item.groupValue || 'N/A';\n      for (var i = 0; i < item.doclist.docs.length; i++) {\n        for (var property in item.doclist.docs[i]) {\n          if (item.doclist.docs[i].hasOwnProperty(property) && property != time) {\n            var t = moment.utc(item.doclist.docs[i][time]).unix() * 1000;\n            var key = item.groupValue + ':' + property;\n            if (datapoints[key] == undefined) {\n              datapoints[key] = [];\n            }\n            datapoints[key].push([item.doclist.docs[i][property], t]);\n          }\n        }\n      }\n      /*seriesList.push({\n        target: target,\n        datapoints: datapoints.reverse()\n      });*/\n      seriesList = [];\n      for (var prop in datapoints) {\n        seriesList.push({\n          target: prop,\n          datapoints: datapoints[prop].reverse()\n        });\n      }\n    });\n    return {\n      data: seriesList\n    };\n  }\n\n  convertResponse(response, format) {\n\n    var data = response.data;\n\n    if (!data) {\n      return [];\n    }\n\n    if (data.response) {\n      return this.convertResponseUngrouped(response, format);\n    }\n\n    if (data.grouped) {\n      return this.convertResponseGrouped(response);\n    }\n\n    return [];\n  }\n\n  annotationQuery(options) {\n    const annotation = options.annotation;\n    const baseQuery = this.templateSrv.replace(annotation.query, {}, \"glob\") || \"*:*\";\n    const timeField = annotation.timeField || \"timestamp_dt\";\n    const collection = annotation.collection || \"annotations\";\n    const tagsField = annotation.tagsField || \"tags\";\n    const titleField = annotation.titleField || \"desc\";\n    const textField = annotation.textField || null;\n    const start = options.range.from.toISOString();\n    const end = options.range.to.toISOString();\n    const query = {\n      q: `${baseQuery} AND ${timeField}:[${start} TO ${end}]`,\n      limit: 10\n    };\n\n    var url = this.url + '/solr/' + collection + '/select?wt=json&defType=edismax';\n\n    var requestOptions;\n\n    requestOptions = {\n      method: 'GET',\n      url: url,\n      params: query\n    };\n\n    return this.doRequest(requestOptions).then((result) => {\n      return _.map(result.data.response.docs, (doc) => {\n        return {\n          annotation: annotation,\n          time: moment(doc[timeField]).valueOf(),\n          title: doc[titleField],\n          tags: doc[tagsField],\n          text: doc[textField]\n        };\n      });\n    });\n  }\n\n  doRequest(options) {\n    options.withCredentials = this.withCredentials;\n    options.headers = this.headers;\n    if (this.basicAuth) {\n      options.withCredentials = true;\n      options.headers = {\n        \"Authorization\": this.basicAuth\n      };\n    }\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n}"]}